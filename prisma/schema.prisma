// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// use title String @db.Text if use mysql
model Course {
  id          String     @id @default(uuid())
  userId      String
  title       String
  description String?
  price       Float?
  imageUrl    String?
  isPublished Boolean    @default(false)
  categoryId  String?
  category    Category?  @relation(fields: [categoryId], references: [id])
  chapters    Chapter[]
  purchases   Purchase[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id      String   @id @default(uuid())
  name    String
  courses Course[]
}

model Chapter {
  id           String         @id @default(uuid())
  title        String
  description  String
  isPublished  Boolean        @default(false)
  isFree       Boolean        @default(false)
  videoUrl     String?
  postion      Int
  courseId     String
  course       Course         @relation(fields: [courseId], references: [id], onDelete: Cascade)
  attachments  Attachment[]
  userProgress UserProgress[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@index([courseId])
}

model UserProgress {
  id          String  @id @default(uuid())
  userId      String
  chapterId   String
  chapter     Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  isCompleted Boolean @default(false)

  @@unique([userId, chapterId])
  @@index([chapterId])
}

model Attachment {
  id        String  @id @default(uuid())
  name      String
  url       String
  chapterId String
  chapter   Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  @@index([chapterId])
}

model Purchase {
  id        String   @id @default(uuid())
  userId    String
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId])
  @@index([courseId])
}
